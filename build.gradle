plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    // Central repositories first for better resolution speed
    mavenCentral()

    // Fabric/Minecraft repositories
    maven {
        name = "sonatype-oss-snapshots"
        url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    }

    // Mod-specific repositories (organized and deduplicated)
    maven {
        name = "Shedaniel's Maven"
        url = "https://maven.shedaniel.me/"
    }

    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/releases/"
    }

    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }

    maven {
        name = "Ladysnake Mods"
        url = "https://ladysnake.jfrog.io/artifactory/mods"
        content {
            includeGroup 'io.github.ladysnake'
            includeGroupByRegex 'io\\.github\\.onyxstudios.*'
        }
    }

    maven {
        name = "CurseForge"
        url = "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        name = "Draylar Maven"
        url = "https://maven.draylar.dev/releases"
    }

    maven {
        name = "EngineHub"
        url = "https://maven.enginehub.org/repo/"
    }

    maven {
        name = "Kyrptonaught"
        url = "https://maven.kyrptonaught.dev"
    }

    maven {
        name = "GeckoLib"
        url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
    }

    maven {
        name = "Gradle Plugins"
        url = "https://plugins.gradle.org/m2/"
    }

    // JitPack last as it's slower
    maven {
        name = "JitPack"
        url = "https://jitpack.io"
    }
}

dependencies {
    // Core Minecraft and Fabric dependencies
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Runtime libraries
    implementation('com.google.code.gson:gson:2.9.1')
    implementation('org.projectlombok:lombok:1.18.24')

    // Bundled mod dependencies
    include modImplementation("net.kyori:adventure-platform-fabric:5.2.1")
    include modImplementation('net.kyrptonaught:customportalapi:0.0.1-beta52-1.18')
    include modImplementation("curse.maven:architectury-419699:4521464")
    include modImplementation('software.bernie.geckolib:geckolib-fabric-1.18:3.0.56')
    include modImplementation("com.sk89q.worldedit:worldedit-fabric-mc1.18.2:7.2.10")
    include modImplementation("com.github.StellarWind22:Fabric-Shield-Lib:v${project.fabric_shield_lib_version}")
    include modImplementation("com.terraformersmc:modmenu:${project.mod_menu_version}")
    include modImplementation("maven.modrinth:midnightlib:${project.midnightlib_version}")
    include modImplementation("com.github.Chocohead:Fabric-ASM:v${project.fabricasm_version}")
    include modImplementation("draylar.omega-config:omega-config-base:1.2.3-1.18.1")
    include modImplementation("curse.maven:identity-391390:4399461")
    include modImplementation("me.shedaniel.cloth:cloth-config-fabric:6.2.62")
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }

    repositories {
        // Add your publishing repositories here if needed
    }
}